[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-context-nexus"
version = "1.0.0"
description = "A revolutionary distributed memory and context management system for AI agents"
readme = "README.md"
authors = [
    {name = "Mike Cerqua", email = "mikecerqua@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "aiohttp>=3.9.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "gitpython>=3.1.0",
    "redis>=5.0.0",
    "numpy>=1.24.0",
    "lz4>=4.3.0",
    "networkx>=3.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "black>=23.0.0",
    "isort>=5.12.0",
]
embeddings = [
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.0",
    "torch>=2.0.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
]

[project.urls]
Homepage = "https://github.com/mikecerqua/ai-context-nexus"
Documentation = "https://ai-context-nexus.readthedocs.io"
Repository = "https://github.com/mikecerqua/ai-context-nexus"
Issues = "https://github.com/mikecerqua/ai-context-nexus/issues"

[project.scripts]
nexus = "scripts.nexus_cli:cli"
ai-context-nexus = "scripts.nexus_cli:cli"

[tool.setuptools.packages.find]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"

[tool.coverage.run]
source = ["core", "agents", "memory", "scripts"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]